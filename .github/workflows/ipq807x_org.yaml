name: "Build IPQ807x_ax3600_org"
on:
  workflow_dispatch:
  #push:
  schedule:
    #- cron: '0 10 * * 1'
     - cron: '0 5 * * *'
  
jobs:
  check1:
    name: Check remote repo for new commits
    runs-on: ubuntu-latest
    steps:
      - name: Use GitHub API to poll commits
        run: |
          curl -sL "https://api.github.com/repos/$REMOTE_REPOSITORY/commits?sha=$REMOTE_BRANCH&per_page=1" | jq -r '[.[]][0]' > commit.json
        env:
          REMOTE_REPOSITORY: openwrt/openwrt
          REMOTE_BRANCH: master
      - name: Calculate hours since last commit
        id: calc
        run: |
          date="$(jq -r '.commit.committer.date' commit.json)"
          timestamp=$(date --utc -d "$date" +%s)
          hours=$(( ( $(date --utc +%s) - $timestamp ) / 3600 ))
          eventname=${{ github.event_name }}
          echo "Last commit date: $date"
          echo "Hours since last commit: $hours"
          echo "Event Name: $eventname"
          echo "commit_age=$hours" >> $GITHUB_OUTPUT
          #echo "::set-output name=commit_age::$hours"

    outputs:
      commit_age: ${{ steps.calc.outputs.commit_age }}

  check2:
    name: Fail?
    needs: check1
    runs-on: ubuntu-latest
    
    steps:
    - name: Try to fail?
      if:  ${{ (needs.check1.outputs.commit_age > 24) && (github.event_name == 'schedule') }}
      #if: false == ${{ (needs.check1.outputs.commit_age > 24) && (github.event_name == 'schedule') }}
      env:
        COMMIT_AGE: ${{ needs.check1.outputs.commit_age }}
      run: |
        eventname=${{ github.event_name }}
        echo "cancle run"
        echo "Event Name: $eventname"
        echo "maximal 24H"
        echo "Hours since last commit: $COMMIT_AGE"
        exit 1
        
    - name: all OK!!
      env:
        COMMIT_AGE: ${{ needs.check1.outputs.commit_age }}
      run: |
        eventname=${{ github.event_name }}
        echo "all OK"
        echo "Event Name: $eventname"
        echo "Hours since last commit: $COMMIT_AGE"

  build:
        name: Prepare and build IPQ807x generic images
        needs: check2
        runs-on: ubuntu-latest
        if: ${{ needs.check1.outputs.commit_age <= 24 || github.event_name == 'workflow_dispatch' }}
        steps:
            - name: Show inputs received from previous job
              env:
                COMMIT_AGE: ${{ needs.check1.outputs.commit_age }}
              run: |
                echo "Build triggered with commits last pushed $COMMIT_AGE hours ago"
            - name: Checkout
              uses: actions/checkout@v2
              with:
                repository: openwrt/openwrt
                ref: master
            - name: Update and install feeds
              run: |
                ./scripts/feeds update -a
                ./scripts/feeds install -a

            - name: Generate config for IPQ807x Generic
              run: |
                echo "CONFIG_TARGET_ipq807x=y" > .config
                echo "CONFIG_TARGET_ipq807x_generic=y\n" >> .config
                echo "CONFIG_TARGET_MULTI_PROFILE=n\n" >> .config
                echo "CONFIG_TARGET_ALL_PROFILES=n\n" >> .config
                echo "CONFIG_TARGET_ipq807x_generic_DEVICE_xiaomi_ax3600=y" >> .config
                echo "CONFIG_TARGET_PROFILE="DEVICE_xiaomi_ax3600"" >> .config
                echo "CONFIG_TARGET_PER_DEVICE_ROOTFS=y\n" >> .config
                echo "CONFIG_TARGET_ROOTFS_INITRAMFS=y\n" >> .config
                echo "CONFIG_TARGET_INITRAMFS_COMPRESSION_ZSTD=y\n" >> .config
                
                #WOLFSSL
                #echo "CONFIG_PACKAGE_wpad-basic-wolfssl=m\n" >> .config
                #echo "CONFIG_PACKAGE_wpad-wolfssl=y\n" >> .config
                #echo "CONFIG_PACKAGE_libwolfssl=n\n" >> .config
                
                #MBEDTLS
                echo "CONFIG_PACKAGE_wpad-basic-mbedtls=m\n" >> .config
                echo "CONFIG_PACKAGE_wpad-mbedtls=y\n" >> .config
                
                # services and tools
                echo "CONFIG_PACKAGE_curl=y" >> .config
                echo "CONFIG_PACKAGE_wget=y" >> .config
                echo "CONFIG_PACKAGE_arp-scan=y" >> .config
                echo "CONFIG_PACKAGE_bind-host=y" >> .config
                echo "CONFIG_PACKAGE_irqbalance=y" >> .config
                
                
                # luci
                echo "CONFIG_PACKAGE_luci=y\n" >> .config
                #echo "CONFIG_PACKAGE_luci-compat=y" >> .config
                
                # Sonstiges
                echo "CONFIG_PACKAGE_luci-ssl=y" >> .config
                echo "CONFIG_PACKAGE_luci-app-statistics=y" >> .config
          
                # Spam
                #echo "CONFIG_PACKAGE_adblock=y\n" >> .config
                #echo "CONFIG_PACKAGE_luci-app-adblock=y\n" >> .config
                
                # wlan test
                #echo "CONFIG_PACKAGE_dawn=y\n" >> .config
                #echo "CONFIG_PACKAGE_luci-app-dawn=y\n" >> .config
                

                make defconfig

            - name: Download package sources
              run: make download V=s

            - name: Build tools
              run: |
                make tools/install -j$(nproc) V=s || \
                make tools/install V=s

            - name: Build toolchain
              run: |
                make toolchain/install -j$(nproc) V=s || \
                make toolchain/install V=s

            - name: Build target images
              run: |
                make -j$(nproc) V=s || \
                make V=s

            - name: TAR output
              run: tar -cvf ipq807xx-images_ax3600_org.tar bin/targets/ipq807x/generic

            - name: Upload artifacts
              uses: actions/upload-artifact@v2
              with:
                name: ipq807x-images_ax3600_org
                path: ipq807xx-images_ax3600_org.tar

  release:
          name: Make a release
          runs-on: ubuntu-latest
          needs: build

          steps:
            - name: Download the image artifacts
              uses: actions/download-artifact@v2
              with:
                name: ipq807x-images_ax3600_org

            - name: Extract the image artifacts
              run: tar xf ipq807xx-images_ax3600_org.tar
            
            - name: Extract version information from version.buildinfo
              run: >-
                 echo "BUILDINFO=$(cat bin/targets/ipq807x/generic/version.buildinfo)"
                 >> $GITHUB_ENV

            - name: Get the current date
              run: echo "NOW=$(date +%F-%H%M)" >> $GITHUB_ENV

            - name: Create a release
              uses: "lauravuo/action-automatic-releases@test-changes"
              with:
                repo_token: "${{ secrets.GITHUB_TOKEN }}"
                prerelease: false
                title: "ipq807x_ax3600_org-${{ env.NOW }}-(${{ env.BUILDINFO }})"
                automatic_release_tag: "ipq807x_ax3600_org-${{ env.NOW }}@(${{ env.BUILDINFO }})"
                auto_generate_release_notes: true
                files: bin/targets/ipq807x/generic/*
                
